--CREAR UN ID DE VENTA DE MANERA DINAMICA 
CREATE PROCEDURE SP_I_VENTA_01
@SUC_ID INT,
@USER_ID INT
AS
BEGIN
	SET NOCOUNT ON
		INSERT INTO TM_VENTA
		(SUC_ID, USER_ID,ACTIVE)
		VALUES
		(@SUC_ID, @USER_ID, 2)
		SELECT VENTA_ID FROM TM_VENTA WHERE VENTA_ID = @@IDENTITY
	SET NOCOUNT OFF

END
-----------------------------------------------------------------------------------------------------
--LISTAR DETALLE DE VENTAS 
CREATE PROCEDURE SP_L_VENTA_01  
@VENTA_ID INT  
AS  
BEGIN  
 SELECT   
  TD_VENTA_DETALLE.DET_VENTA_ID,   
  TD_VENTA_DETALLE.VENTA_ID,   
  TD_VENTA_DETALLE.PROD_ID,   
  TD_VENTA_DETALLE.PROD_PVENTA,   
  TD_VENTA_DETALLE.DET_VENTA_CANT,   
  TD_VENTA_DETALLE.DET_TOTAL,   
  TM_PRODUCTO.PROD_NAME,   
  TM_CATEGORIA.CAT_NAME,   
  TM_UNIDAD_DE_MEDIDA.UNID_NAME  
 FROM     TD_VENTA_DETALLE INNER JOIN  
       TM_PRODUCTO ON TD_VENTA_DETALLE.PROD_ID = TM_PRODUCTO.PROD_ID INNER JOIN  
       TM_CATEGORIA ON TM_PRODUCTO.CAT_ID = TM_CATEGORIA.CAT_ID INNER JOIN  
       TM_UNIDAD_DE_MEDIDA ON TM_PRODUCTO.UNID_ID = TM_UNIDAD_DE_MEDIDA.UNI_ID  
  
 WHERE   
 TD_VENTA_DETALLE.VENTA_ID = @VENTA_ID  
 AND TD_VENTA_DETALLE.ACTIVE = 1  
END

-----------------------------------------------------------------------------------------------------------------------
--ELIMINAR DETALLE DE VENTA
CREATE PROCEDURE SP_D_VENTA_01
@DET_VENTA_ID INT
AS
BEGIN
	UPDATE TD_VENTA_DETALLE
	SET ACTIVE  = 0
	WHERE DET_VENTA_ID = @DET_VENTA_ID
END

------------------------------------------------------------------------------------------------------------------
--UPDATE DE CALCULAR Y ACTUALIZAR LOS VALORES DE SUBTOTAL,IVA Y TOTAL DE LA TABLA VENTA DESDE LA TABLA DE DETALLE
CREATE PROCEDURE SP_U_VENTA_01   
@VENTA_ID INT  
AS  
BEGIN  
SET NOCOUNT ON
	 UPDATE TM_VENTA  
	 SET   
	  VENTA_SUB_TOTAL = (SELECT SUM(DET_TOTAL) AS VENTA_SUBTOTAL FROM TD_VENTA_DETALLE WHERE VENTA_ID = @VENTA_ID AND ACTIVE = 1),  
	  VENTA_IVA = VENTA_SUB_TOTAL * 0.19 ,  
	  VENTA_TOTAL = VENTA_SUB_TOTAL + VENTA_IVA  
	 WHERE   
	  VENTA_ID = @VENTA_ID 
  
	SELECT 
		VENTA_SUB_TOTAL AS SUBTOTAL,
		VENTA_IVA AS IVA,
		VENTA_TOTAL AS TOTAL
	FROM
		TM_VENTA
	WHERE 
		VENTA_ID = @VENTA_ID
		
SET NOCOUNT OFF

  
END  
------------------------------------------------------------------------------------------------------------------------------------
--LISTAR CAMPOS PARA RELLENAR LA VISTA DE LA FACTURA EN PDF
CREATE PROCEDURE SP_L_VENTA_PDF_01
@VENTA_ID INT
AS
BEGIN
	SELECT 
		TM_VENTA.*, 
		TM_SUCURSAL.SUC_NAME, 
		TM_EMPRESA.EMP_EMAIL, 
		TM_EMPRESA.EMP_WEBSITE, 
		TM_EMPRESA.EMP_TEL, 
		TM_EMPRESA.EMP_NAME, 
		TM_EMPRESA.EMP_RUT, 
		TM_COMPANIA.COM_NAME
	FROM  
		TM_VENTA INNER JOIN
		TM_SUCURSAL ON TM_VENTA.SUC_ID = TM_SUCURSAL.SUC_ID INNER JOIN
		TM_EMPRESA ON TM_SUCURSAL.EMP_ID = TM_EMPRESA.EMP_ID INNER JOIN
		TM_COMPANIA ON TM_EMPRESA.COM_ID = TM_COMPANIA.COM_ID 
	 WHERE 
		VENTA_ID = @VENTA_ID
 END
 -------------------------------------------------------------------------------------------------
--INSERTAR DETALLES A LA TABLA DE DETALLE DE VENTA
 CREATE PROCEDURE SP_I_VENTA_DETALLE_01  
@VENTA_ID INT,  
@PROD_ID INT,  
@PROD_PVENTA NUMERIC(18,2),  
@DET_VENTA_CANT INT  
  
AS  
BEGIN  
 INSERT TD_VENTA_DETALLE  
 (VENTA_ID, PROD_ID, PROD_PVENTA, DET_VENTA_CANT, DET_TOTAL, CREATED_AT, ACTIVE)  
 VALUES  
 (@VENTA_ID,@PROD_ID,@PROD_PVENTA,@DET_VENTA_CANT,@PROD_PVENTA * @DET_VENTA_CANT,GETDATE(), 1)  
END

SELECT * FROM TM_VENTA
--------------------------------------------------------------------------------------------------------------------------
--LISTAR DATOS PARA LAS VISTAS DE VENTAS POR SUC_ID
CREATE PROCEDURE SP_L_VENTA_04 
@SUC_ID INT AS  
BEGIN  
 SELECT   
 TM_VENTA.*,   
 TM_TIPO_DOCUMENTO.DESCRIPTION,
 TM_SUCURSAL.SUC_NAME,   
 TM_EMPRESA.EMP_EMAIL,   
 TM_EMPRESA.EMP_WEBSITE,   
 TM_EMPRESA.EMP_TEL,   
 TM_EMPRESA.EMP_DIRC,  
 TM_EMPRESA.EMP_NAME,   
 TM_EMPRESA.EMP_RUT,   
 TM_COMPANIA.COM_NAME,   
 TM_USUARIO.USER_NUMBER,   
 TM_USUARIO.USER_DOCUMENT,   
 TM_USUARIO.USER_TYPEDOC,   
 TM_USUARIO.USER_APE,   
 TM_USUARIO.USER_ROLE_ID,   
 TM_USUARIO.USER_NAME,   
 TM_USUARIO.USER_EMAIL,   
 TM_ROL.ROLE_NAME,   
 TM_MONEDA.MON_NAME,   
 TM_PAGO.PAGO_NAME,  
 TM_CLIENTE.CLI_NAME  
FROM       
 TM_VENTA INNER JOIN  
				  TM_TIPO_DOCUMENTO ON TM_VENTA.CLI_TIPO_DOC_ID = TM_TIPO_DOCUMENTO.TIPO_DOC_ID INNER JOIN
                  TM_SUCURSAL ON TM_VENTA.SUC_ID = TM_SUCURSAL.SUC_ID INNER JOIN  
                  TM_EMPRESA ON TM_SUCURSAL.EMP_ID = TM_EMPRESA.EMP_ID INNER JOIN  
                  TM_COMPANIA ON TM_EMPRESA.COM_ID = TM_COMPANIA.COM_ID INNER JOIN  
                  TM_USUARIO ON TM_VENTA.USER_ID = TM_USUARIO.USER_ID INNER JOIN  
				  TM_ROL ON TM_USUARIO.USER_ROLE_ID = TM_ROL.ROLE_ID INNER JOIN  
                  TM_MONEDA ON TM_VENTA.MON_ID = TM_MONEDA.MON_ID INNER JOIN  
                  TM_PAGO ON TM_VENTA.PAGO_ID = TM_PAGO.PAGO_ID INNER JOIN  
				  TM_CLIENTE ON TM_VENTA.CLI_ID = TM_CLIENTE.CLI_ID  
  WHERE     
  TM_VENTA.ACTIVE= 1 AND    TM_VENTA.SUC_ID = @SUC_ID END

  -------------------------------------------------------------------------------------
 --INSERTAR DATOS EN LA TABLA VENTA
CREATE PROCEDURE SP_U_VENTA_03   
@VENTA_ID INT, 
@PAGO_ID INT,  
@CLI_ID INT,  
@CLI_TIPO_DOC_ID INT,
@CLI_DOC INT,
@CLI_DIRECC VARCHAR(150),  
@CLI_EMAIL VARCHAR(150),  
@CLI_NUMBER INT,
@MON_ID INT,  
@VENTA_COMENT VARCHAR(500)  
AS  
BEGIN  
    -- Asegurarse de que no se devuelvan filas automáticamente  
    SET NOCOUNT ON;  
  
    -- Actualizar la tabla TM_VENTA  
    UPDATE TM_VENTA  
    SET  
        PAGO_ID = @PAGO_ID,  
        CLI_ID = @CLI_ID,
        CLI_TIPO_DOC_ID = @CLI_TIPO_DOC_ID,  
        CLI_DOC = @CLI_DOC,  
        CLI_DIRECC = @CLI_DIRECC,  
        CLI_EMAIL = @CLI_EMAIL,   
        CLI_NUMBER = @CLI_NUMBER,
		MON_ID = @MON_ID, 
        VENTA_COMENT = @VENTA_COMENT,  
        CREATED_AT = GETDATE(),  
        ACTIVE = 1  
    WHERE   
        VENTA_ID = @VENTA_ID;  
  
    -- Habilitar la devolución de filas si es necesario  
    SET NOCOUNT OFF;  
END;  
--------------------------------------------------------------------------------------------------------------------------
--ACTUALIZAR STOCK
CREATE PROCEDURE SP_U_STOCK_VENTA_01  
@VENTA_ID INT  
AS  
BEGIN  
 DECLARE @ID_REGISTRO INT  
 DECLARE @PROD_ID INT  
 DECLARE @CANT INT  
  
 DECLARE CUR CURSOR FOR SELECT DET_VENTA_ID FROM TD_VENTA_DETALLE WHERE VENTA_ID = @VENTA_ID  
 OPEN CUR   
  FETCH NEXT FROM CUR INTO @ID_REGISTRO  
  WHILE @@FETCH_STATUS=0  
   BEGIN  
    SELECT @PROD_ID = PROD_ID, @CANT = DET_VENTA_CANT FROM TD_VENTA_DETALLE WHERE DET_VENTA_ID = @ID_REGISTRO  
  
    UPDATE TM_PRODUCTO  
    SET  
     PROD_STOCK = PROD_STOCK - @CANT  
    WHERE   
     PROD_ID = @PROD_ID  
    FETCH NEXT FROM CUR INTO @ID_REGISTRO  
   END  
  
  
 CLOSE CUR  
 DEALLOCATE CUR  
END